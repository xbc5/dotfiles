{
  "editor.linkedEditing": true, // auto edit related symbols (e.g. html tags)
  "editor.trimAutoWhitespace": true,
  //
  // -- editor windows
  "workbench.editor.limit.enabled": true, // close old, saved editors
  "workbench.editor.enablePreview": true, // close editors unless interacted with
  "workbench.editor.highlightModifiedTabs": true, // border for dirty tabs
  //
  // -- formatting
  "editor.defaultFormatter": "esbenp.prettier-vscode", // auto-formatter
  "editor.tabSize": 2, // spaces in tabs
	"prettier.printWidth": 80,
	"files.autoSave": "onFocusChange",
	"editor.formatOnSave": true,
	"editor.formatOnSaveMode": "modifications", // only AUTO-format modifications; requires VCS;
	"editor.formatOnPaste": true,
  //
  // -- display
  "editor.lineNumbers": "on",
  "workbench.editor.showTabs": false,
  "editor.minimap.enabled": false,
  "editor.semanticHighlighting.enabled": true, // Lua lang server suggests turning this on
  //
  // -- code completion
  "editor.suggest.insertMode": "replace", // overwrite with suggestions
  "editor.unusualLineTerminators": "auto",
  //
  // #######################################################
  // ######################### FZF #########################
  // #######################################################
  //
  // -- "find" command
  // not used for ripgrep searches
  "fzf-quick-open.findDirectoriesCmd": "fd --type d .",
  //
  // -- ripgrep: case sensitivity
  // Smart case: canse sensitive, only is uppercase used.
  "fzf-quick-open.ripgrepSearchStyle": "Smart case",
  //
  // #######################################################
  // ####################### GIT-LENS ######################
  // #######################################################
  //
  // -- annoying code lens
  "gitlens.codeLens.enabled": false,
  //
  // -- commit all, when none staged
  "git.enableSmartCommit": true,
  //
  // #######################################################
  // ######################## HTML #########################
  // #######################################################
  //
  "[html]": {
    // -- set the formatter
    "editor.defaultFormatter": "vscode.html-language-features" // use built-in; could be prettier;
  },
  //
  // #######################################################
  // ###################### LANGUAGES ######################
  // #######################################################
  //
  "[javascript]": {},
  "[jsonc]": {},
  "[python]": {},
  "[lua]": {
    "editor.defaultFormatter": "stanzilla.vscode-luaformatter",
  },
  // 
  // #######################################################
  // ##################### TYPESCRIPT ######################
  // #######################################################
  //
  // -- language settings
  "[typescript]": {},
  //
  // -- imports
  "typescript.preferences.importModuleSpecifier": "non-relative", // obey tsconfig paths aliases for imports
  "typescript.suggest.autoImports": true, // does it obey importModuleSpecifier?
  "typescript.updateImportsOnFileMove.enabled": "always", // always == auto
  "typescript.preferences.importModuleSpecifierEnding": "minimal", // minimal: avoid "[...]/index.js"
  "typescript.suggest.paths": true, // auto path suggestions
  //
  // -- auto completion 
  "typescript.suggest.enabled": true,
  "typescript.suggest.completeFunctionCalls": false, // autocomplete function signatures
  "typescript.suggest.completeJSDocs": true,
  "typescript.suggest.jsdoc.generateReturns": true,
  //
  // #######################################################
  // ######################## MISC #########################
  // #######################################################
  //
  // -- tips
	"workbench.tips.enabled": true, // show on default screen (startup)
  //
  // #######################################################
  // ######################### VIM #########################
  // #######################################################
  //
  // -- use global clipboard
  "vim.useSystemClipboard": true,
  //
  // -- status bar
  "vim.statusBarColorControl": true,
  "vim.statusBarColors.insert": "#008800",
  "vim.statusBarColors.normal": "#2222FF",
  "vim.statusBarColors.visualline": "#AA00AA",
  "vim.statusBarColors.commandlineinprogress": "#111111",
  //
  // -- CURRENT status bar colour
  // ! auto-managed
  "workbench.colorCustomizations": {
    "statusBar.background": "#2222FF",
    "statusBar.noFolderBackground": "#2222FF",
    "statusBar.debuggingBackground": "#2222FF"
  },
  //
  // #######################################################
  // #################### TODO HIGHLIGHT ###################
  // #######################################################
  //
  // -- work even in txt files
  "better-comments.highlightPlainText": true,
  //
  // -- custom tags
  "better-comments.tags": [
    // bug: this is a bug comment
    // fixme: this is a fixme comment
    // hack: this is a hacky comment
    // ! this is an important note
    // >> START HERE; this is where you left off.
    // note: this is a note, so take note
    // todo: this is a todo comment
    // ? this is a question
    // -- this is a title
    // * this is a list item
    // // strikethrough comment
    {
      "tag": "--",
      "color": "#7B3374",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": true,
      "italic": false
    },
    {
      "tag": ">>",
      "color": "#000000",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "#00FF00",
      "bold": true,
      "italic": false
    },
    {
      "tag": "todo",
      "color": "#00FF00",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": true,
      "italic": false
    },
    {
      "tag": "hack",
      "color": "#000000",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "#FFFF00",
      "bold": true,
      "italic": false
    },
    {
      "tag": "note",
      "color": "#FFFFFF",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": true,
      "italic": false
    },
    {
      "tag": "fixme",
      "color": "#000000",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "#FF8000",
      "bold": true,
      "italic": false
    },
    {
      "tag": "bug",
      "color": "#FFFFFF",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "#FF0000",
      "bold": true,
      "italic": false
    },
    {
      "tag": "!",
      "color": "#FF0000",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "#FFFFFF",
      "bold": true,
      "italic": false
    },
    {
      "tag": "?",
      "color": "#3498DB",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "//",
      "color": "#474747",
      "strikethrough": true,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
      "tag": "*",
      "color": "#98C379",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    }
  ],
  //
  // #######################################################
  // ##################### Multi-Command ###################
  // #######################################################
  //
  "multiCommand.commands": [
    // -- hide evrything except editor group
    // NOTE: initially I wanted this to hide everything except the editor
    // but that'snow possible because of toggles. Just use zen mode instead.
    // this at least gets rid of all side bars, even if it's not optimal.
    {
      "command": "multiCommand.showOnlyEditorGroup",
      "label": "showOnlyEditorGroup",
      "description": "Hide everything except the editor group.",
      "sequence": [
        "workbench.action.maximizeEditor",
        "workbench.action.toggleActivityBarVisibility"
      ]
    }
  ],
  //
  // #######################################################
  // ################## Svelte for VS Code #################
  // #######################################################
  //
  // -- formatter for .svelte files
  // NOTE: it's a prettier plug-in, so some configurations are done there.
  "[svelte]": {
    "editor.defaultFormatter": "svelte.svelte-vscode"
  },
  //
  //!#######################################################
  //!#################### Auto-Inserted ####################
  //!#######################################################
  //
  // ! Don't edit beyond this point.
  "placeholder.dont.delete.me": "I'm here so that auto-managed settings are inserted below",
  "window.menuBarVisibility": "compact",
  "editor.cursorStyle": "line",
  "editor.insertSpaces": false,
  "editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
  "editor.wordWrap": "off",
  "workbench.colorTheme": "Hyper Dracula"
}
