#!/bin/bash

ZSH_DIR="${HOME}/.zsh"

_help() {
  cat <<EOF
Usage: $(basename $0) OPTIONS...

If you run this without arguments, it pulls ALL configs into
the repository.

OPTIONS
  -a          Everything.
  -g          GIT, push or pull git configs.
  -p          Push configs instead of pulling them.
  -s          ASPELL, push or pull the aspell dicitonaries.
  -z          ZSH, push or pull the zshrc, and $ZSH_DIR files.
  -h          Display this help menu.
EOF
}

ROOT="$(realpath $(dirname $0))"

# We cannot embed getopts into a switch for some reason, so
# I need to build up a list of targets, and loop over those instead.
TARGETS=("all")
COMMAND="pull"
while getopts "aghpsz" opt; do
  case "${opt}" in
  # Map options to target names.
  a) TARGETS=("all") && break ;; # Supersedes everything; destructively set it and break.
  g) TARGETS+=("git") ;;
  p) COMMAND="push" ;;
  s) TARGETS+=("aspell") ;;
  z) TARGETS+=("zsh") ;;
  h) COMMAND="help" ;;
  esac
done

# ASPELL
# -----------------------------------------------------------------------------
# Merge ~/.aspell* with its repo counterpart.
_merge_aspell() {
  local fname="$1"
  if [[ -f "$HOME/$fname" ]]; then
    local tmp="$(mktemp)"
    trap "rm -f $tmp" EXIT

    cat "$ROOT/aspell/$fname" >"$tmp" # Existing.
    cat "$HOME/.$fname" >>"$tmp"      # Repo.

    cat "$tmp" | uniq >"$ROOT/aspell/$fname" # Merge.
  fi
}

# Merge local dictionaries into the repository.
_pull_aspell() {
  _merge_aspell "aspell.en.prepl"
  _merge_aspell "aspell.en.pws"
  echo "aspell dictionaries pulled"
}

_push_aspell() {
  echo cp "$ROOT/aspell/aspell.en.prepl" "$HOME/.aspell.en.prepl"
  echo cp "$ROOT/aspell/aspell.en.pws" "$HOME/.aspell.en.pws"
  echo "aspell dictionaries pushed"
}

# GIT
# -----------------------------------------------------------------------------
_pull_git() {
  echo cp "$HOME/.gitconfig" "$ROOT/git/gitconfig"
  echo "git config pulled"
}

_push_git() {
  echo cp "$ROOT/git/gitconfig" "${HOME}/.gitconfig"
  echo "git config pushed"
}

# ZSH
# -----------------------------------------------------------------------------
_pull_zsh() {
  echo cp "$HOME/.zshrc" "$ROOT/zsh/zshrc"
  echo cp "$ZSH_DIR/zle.zsh" "$ROOT/zsh/"
  echo "zsh config pulled"
}

_push_zsh() {
  echo cp "$ROOT/zsh/zshrc" "${HOME}/.zshrc"
  echo mkdir -p "$ZSH_DIR"
  echo cp "$ROOT/zsh/zle.zsh" "${ZSH_DIR}/"
  echo "zsh config pushed"
}

# ALL
# -----------------------------------------------------------------------------
_push_all() {
  _push_aspell
  _push_git
  _push_zsh
}

_pull_all() {
  _pull_aspell
  _pull_git
  _pull_zsh
}

# Loop over target names and dispatch.
case "$COMMAND" in
push)
  for target in "${TARGETS[@]}"; do
    case "$target" in
    all) _push_all ;; # If set, only this executes.
    git) _push_git ;;
    aspell) _push_aspell ;;
    zsh) _push_zsh ;;
    *) echo "unknown target: $target" >&2 ;;
    esac
  done
  ;;
pull)
  for target in "${TARGETS[@]}"; do
    case "$target" in
    all) _pull_all ;; # If set, only this executes.
    git) _pull_git ;;
    aspell) _pull_aspell ;;
    zsh) _pull_zsh ;;
    *) echo "unknown target: $target" >&2 ;;
    esac
  done
  ;;
help) _help ;;
*) echo -e "Unknown command: '$COMMAND'\n" >&2 && _help ;;
esac
